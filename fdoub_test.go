package fdoub

import (
	"io/ioutil"
	"math/big"
	"testing"
)

func TestLower(t *testing.T) {
	var lower = []int64{
		0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610,
		987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025,
		121393, 196418, 317811, 514229, 832040, 1346269, 2178309,
		3524578, 5702887, 9227465, 14930352, 24157817, 39088169,
		63245986, 102334155, 165580141, 267914296, 433494437, 701408733,
		1134903170, 1836311903, 2971215073, 4807526976, 7778742049,
		12586269025, 20365011074, 32951280099, 53316291173, 86267571272,
		139583862445, 225851433717, 365435296162, 591286729879,
		956722026041, 1548008755920, 2504730781961, 4052739537881,
		6557470319842, 10610209857723, 17167680177565, 27777890035288,
		44945570212853, 72723460248141, 117669030460994,
		190392490709135, 308061521170129, 498454011879264,
		806515533049393, 1304969544928657, 2111485077978050,
		3416454622906707, 5527939700884757, 8944394323791464,
		14472334024676221, 23416728348467685, 37889062373143906,
		61305790721611591, 99194853094755497, 160500643816367088,
		259695496911122585, 420196140727489673, 679891637638612258,
		1100087778366101931, 1779979416004714189, 2880067194370816120,
		4660046610375530309, 7540113804746346429,
	}

	for i := range lower {
		n := big.NewInt(int64(i))
		want := big.NewInt(lower[i])
		if n = Fib(n); n.Cmp(want) != 0 {
			t.Fatalf("fib(%d) != %d", i, lower[i])
		}
	}
}

func TestLarge(t *testing.T) {
	large := big.NewInt(256)
	want, _ := new(big.Int).SetString("141693817714056513234709965875411919657707794958199867", 10)
	if n := Fib(large); n.Cmp(want) != 0 {
		t.Fatal("fib large != want")
	}

	large = large.SetInt64(40000)
	b, err := ioutil.ReadFile("test_large")
	if err != nil {
		t.Fatal(err)
	}
	want, _ = want.SetString(string(b), 10)
	if n := Fib(large); n.Cmp(want) != 0 {
		t.Fatal("fib large != want")
	}
}
